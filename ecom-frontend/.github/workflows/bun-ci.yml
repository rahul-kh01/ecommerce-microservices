# GitHub Actions CI/CD with Bun
name: CI/CD with Bun

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.38

      - name: 📦 Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 📥 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🔍 Check Bun version
        run: bun --version

      - name: 🧹 Lint code
        run: bun run lint
        continue-on-error: true

      - name: 🏗️ Build application
        run: bun run build
        env:
          VITE_BACK_END_URL: ${{ secrets.VITE_BACK_END_URL || 'http://localhost:8080' }}

      - name: 📊 Build size report
        run: |
          du -sh dist
          echo "Build size: $(du -sh dist | cut -f1)"

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ecom-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_BACK_END_URL=${{ secrets.VITE_BACK_END_URL || 'http://localhost:8080' }}

